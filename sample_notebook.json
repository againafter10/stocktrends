{
    "paragraphs": [
        {
            "title": "dependencies",
            "text": "import org.apache.spark.sql.functions._\nimport org.apache.log4j.{Level, Logger}\nimport org.apache.spark.sql.{SparkSession, functions}\nimport org.apache.spark.sql.functions.{avg, when, to_date }\nimport org.apache.spark.sql.expressions.Window\nimport org.apache.spark.sql.functions.lag\nimport org.apache.spark.sql.DataFrame",
            "user": "keepinsight",
            "dateUpdated": "2018-08-19T08:19:22+0000",
            "config": {
                "colWidth": 12,
                "enabled": true,
                "results": {},
                "editorSetting": {
                    "language": "scala",
                    "editOnDblClick": false
                },
                "editorMode": "ace/mode/scala",
                "editorHide": true,
                "tableHide": true,
                "title": true
            },
            "settings": {
                "params": {},
                "forms": {}
            },
            "results": {
                "code": "SUCCESS",
                "msg": [
                    {
                        "type": "TEXT",
                        "data": "import org.apache.spark.sql.functions._\nimport org.apache.log4j.{Level, Logger}\nimport org.apache.spark.sql.{SparkSession, functions}\nimport org.apache.spark.sql.functions.{avg, when, to_date}\nimport org.apache.spark.sql.expressions.Window\nimport org.apache.spark.sql.functions.lag\nimport org.apache.spark.sql.DataFrame\n"
                    }
                ]
            },
            "apps": [],
            "jobName": "paragraph_1534666705945_-8420796",
            "id": "20180819-081825_1641107799",
            "dateCreated": "2018-08-19T08:18:25+0000",
            "dateStarted": "2018-08-19T08:18:55+0000",
            "dateFinished": "2018-08-19T08:18:55+0000",
            "status": "FINISHED",
            "progressUpdateIntervalMs": 500,
            "focus": true,
            "$$hashKey": "object:1080"
        },
        {
            "title": "utils",
            "text": "\n    def stocksHealth(stocksDF: DataFrame ): Unit = {\n        if (stocksDF.count() > 0) {\n\n            stocksDF.show()\n        }\n        else\n        {\n            stocksDF.sqlContext.emptyDataFrame\n        }\n\n    }\n\n\n    //-------------------------------------------//\n\n\n    def stocksLastTenDaysUP(stocksDF: DataFrame,columns: List[String] ): Unit = {\n        if (stocksDF.count() > 0) {\n            println(\"last tendays upward trend for symbols\\n\")\n            stocksDF.filter(\"trend == 'UP'\").sort(\"symbol\")\n              .sort(\"symbol\")\n              .sort(\"date\")\n              .filter(\"date <= 'date_sub(current_date(),10'\")\n              .select(columns.map(col): _*)\n              .show()\n\n\n        }\n        else\n        {\n            stocksDF.sqlContext.emptyDataFrame\n        }\n\n    }\n\n    //-------------------------------------------//\n\n    def stocksLastTenDaysDown(stocksDF: DataFrame ,columns: List[String]): Unit = {\n        if (stocksDF.count() > 0) {\n            println(\"last tendays upward trend for symbols\\n\")\n            stocksDF.filter(\"trend == 'DOWN'\").sort(\"symbol\")\n              .sort(\"symbol\")\n              .sort(\"date\")\n              .filter(\"date <= 'date_sub(current_date(),10'\")\n              .select(columns.map(col): _*)\n              .show()\n\n        }\n        else\n        {\n            stocksDF.sqlContext.emptyDataFrame\n        }\n\n    }\n\n    //-------------------------------------------//\n\n    def stocksLastTenDaysSame(stocksDF: DataFrame,columns: List[String] ): Unit = {\n\n        if (stocksDF.count() > 0) {\n            println(\"last tendays upward trend for symbols\\n\")\n            stocksDF.filter(\"trend == 'SAME'\")\n              .sort(\"symbol\")\n              .sort(\"date\")\n              .filter(\"date <= 'date_sub(current_date(),10'\")\n              .select(columns.map(col): _*)\n              .show()\n\n\n        }\n        else\n        {\n            stocksDF.sqlContext.emptyDataFrame\n        }\n\n    }\n    //-------------------------------------------//\n    def checkColumnLength(df : DataFrame):Int = {\n        df.columns.length\n    }\n    //-------------------------------------------//\n\n    def readCsv(path:String):DataFrame = {\n\n        val session = SparkSession.builder().appName(\"StocksTrends\").master(\"local[4]\").getOrCreate()\n        session.read.option(\"header\",\"false\").option(\"inferschemea\",\"true\").csv(path).toDF(\"symbol\",\"date\",\"openprice\",\"highprice\",\"closeprice\",\"volume\",\"adjcloseprice\")\n\n\n    }\n\n    //-------------------------------------------//\n\n    def findTrends(sampleDF:DataFrame):DataFrame = {\n        //var trends = sampleDF\n        //create the window of size 3\n        val frame_3 = Window.partitionBy(\"symbol\").orderBy(\"date\").rowsBetween(-1, 1)\n\n\n        //calculate the simple moving average for 3 days on column adjcloseprice\n        var trends = sampleDF.withColumn(\"moving_average\",avg(sampleDF(\"adjcloseprice\")).over(frame_3))\n        trends.printSchema()\n        //trends.show()\n\n        // find the trend\n        val window = Window.partitionBy(\"symbol\").orderBy(\"date\")\n\n        //Derive lag column\n        val laggingCol = lag(trends.col(\"moving_average\"), 1).over(window)\n\n        trends = trends.withColumn(\"laggingcol\",lag(trends.col(\"moving_average\"), 1).over(window))\n        //trends.show()\n\n        //Use derived column  to find difference between current and previous row\n        trends = trends.withColumn(\"priceDiff\",(trends.col(\"moving_average\") - trends.col(\"laggingCol\")))\n        //trends.show()\n\n        //Calculate trend based on the difference being +ve or -ve\n\n        val anlze = when(trends.col(\"priceDiff\").isNull || trends.col(\"priceDiff\").===(0), \"SAME\")\n          .when(trends.col(\"priceDiff\").>(0), \"UP\")\n          .otherwise(\"DOWN\")\n\n        trends.withColumn(\"trend\", anlze)\n\n    }\n\n\n //-------------------------------------------//\n\n    def stocksReport(stocksDF: DataFrame ): DataFrame = {\n\n        if (stocksDF.count() > 0) {\n            println(\"last tendays upward trend for symbols\\n\")\n            stocksDF.filter(\"trend == 'SAME'\")\n              .sort(\"symbol\")\n              .sort(\"date\")\n              .filter(\"date <= 'date_sub(current_date(),10'\")\n              .select(columns.map(col): _*)\n        }\n        else\n        {\n            stocksDF.sqlContext.emptyDataFrame\n        }\n\n    }\n    //-------------------------------------------//\n    \n",
            "user": "keepinsight",
            "dateUpdated": "2018-08-19T08:25:11+0000",
            "config": {
                "colWidth": 12,
                "enabled": true,
                "results": {},
                "editorSetting": {
                    "language": "scala",
                    "editOnDblClick": false
                },
                "editorMode": "ace/mode/scala",
                "title": true,
                "editorHide": false,
                "tableHide": false
            },
            "settings": {
                "params": {},
                "forms": {}
            },
            "results": {
                "code": "ERROR",
                "msg": [
                    {
                        "type": "TEXT",
                        "data": "stocksHealth: (stocksDF: org.apache.spark.sql.DataFrame)Unit\nstocksLastTenDaysUP: (stocksDF: org.apache.spark.sql.DataFrame, columns: List[String])Unit\nstocksLastTenDaysDown: (stocksDF: org.apache.spark.sql.DataFrame, columns: List[String])Unit\nstocksLastTenDaysSame: (stocksDF: org.apache.spark.sql.DataFrame, columns: List[String])Unit\ncheckColumnLength: (df: org.apache.spark.sql.DataFrame)Int\nreadCsv: (path: String)org.apache.spark.sql.DataFrame\nfindTrends: (sampleDF: org.apache.spark.sql.DataFrame)org.apache.spark.sql.DataFrame\n<console>:73: error: not found: value columns\n                     .select(columns.map(col): _*)\n                             ^\n<console>:73: error: missing argument list for method col in object functions\nUnapplied methods are only converted to functions when a function type is expected.\nYou can make this conversion explicit by writing `col _` or `col(_)` instead of `col`.\n                     .select(columns.map(col): _*)\n                                         ^\n"
                    }
                ]
            },
            "apps": [],
            "jobName": "paragraph_1534666735000_849984649",
            "id": "20180819-081855_757396161",
            "dateCreated": "2018-08-19T08:18:55+0000",
            "dateStarted": "2018-08-19T08:25:11+0000",
            "dateFinished": "2018-08-19T08:25:12+0000",
            "status": "ERROR",
            "progressUpdateIntervalMs": 500,
            "$$hashKey": "object:1081"
        },
        {
            "text": "//read the partitioned files\nvar stocks = readCsv(\"/mnt/test/week20180810/*\")\n \n // type the data (only 2 for POC,adjcloseprice and date)\n var stocks_typed = stocks.withColumn(\"adjcloseprice\", stocks.col(\"adjcloseprice\").cast(\"decimal(10,3)\"))\n stocks_typed = stocks.withColumn(\"date\",to_date(date_format(unix_timestamp(stocks.col(\"date\"), \"yyyyMMdd\").cast(\"timestamp\"), \"yyyy-MM-dd\")))\n\n // dataframe checkpoint now\n val trends =findTrends(stocks_typed )\n\n  // display trends on selected columns\n  val displayColumns = List(\"symbol\",\"date\",\"adjcloseprice\",\"trend\")\n",
            "user": "keepinsight",
            "dateUpdated": "2018-08-19T08:22:59+0000",
            "config": {
                "colWidth": 12,
                "enabled": true,
                "results": {},
                "editorSetting": {
                    "language": "scala",
                    "editOnDblClick": false
                },
                "editorMode": "ace/mode/scala"
            },
            "settings": {
                "params": {},
                "forms": {}
            },
            "results": {
                "code": "SUCCESS",
                "msg": [
                    {
                        "type": "TEXT",
                        "data": "stocks: org.apache.spark.sql.DataFrame = [symbol: string, date: string ... 5 more fields]\nstocks_typed: org.apache.spark.sql.DataFrame = [symbol: string, date: string ... 5 more fields]\nstocks_typed: org.apache.spark.sql.DataFrame = [symbol: string, date: date ... 5 more fields]\nroot\n |-- symbol: string (nullable = true)\n |-- date: date (nullable = true)\n |-- openprice: string (nullable = true)\n |-- highprice: string (nullable = true)\n |-- closeprice: string (nullable = true)\n |-- volume: string (nullable = true)\n |-- adjcloseprice: string (nullable = true)\n |-- moving_average: double (nullable = true)\n\ntrends: org.apache.spark.sql.DataFrame = [symbol: string, date: date ... 9 more fields]\ndisplayColumns: List[String] = List(symbol, date, adjcloseprice, trend)\n"
                    }
                ]
            },
            "apps": [],
            "jobName": "paragraph_1534666805124_-1304918965",
            "id": "20180819-082005_938473224",
            "dateCreated": "2018-08-19T08:20:05+0000",
            "dateStarted": "2018-08-19T08:22:59+0000",
            "dateFinished": "2018-08-19T08:22:59+0000",
            "status": "FINISHED",
            "progressUpdateIntervalMs": 500,
            "$$hashKey": "object:1082"
        },
        {
            "text": " stocksHealth(trends)",
            "user": "keepinsight",
            "dateUpdated": "2018-08-19T08:22:42+0000",
            "config": {
                "colWidth": 12,
                "enabled": true,
                "results": {},
                "editorSetting": {
                    "language": "scala",
                    "editOnDblClick": false
                },
                "editorMode": "ace/mode/scala"
            },
            "settings": {
                "params": {},
                "forms": {}
            },
            "results": {
                "code": "SUCCESS",
                "msg": [
                    {
                        "type": "TEXT",
                        "data": "+------+----------+---------+---------+----------+------+-------------+------------------+------------------+-------------------+-----+\n|symbol|      date|openprice|highprice|closeprice|volume|adjcloseprice|    moving_average|        laggingcol|          priceDiff|trend|\n+------+----------+---------+---------+----------+------+-------------+------------------+------------------+-------------------+-----+\n|   CLQ|2018-08-06|     0.69|    0.695|     0.677|  0.68|       555457|         2463496.5|              null|               null| SAME|\n|   CLQ|2018-08-07|     0.67|     0.69|      0.65|  0.67|      4371536|         8381000.0|         2463496.5|          5917503.5|   UP|\n|   CLQ|2018-08-08|    0.665|    0.665|     0.605|  0.65|     20216007|         8477957.0|         8381000.0|            96957.0|   UP|\n|   CLQ|2018-08-09|     0.64|     0.66|     0.635|  0.64|       846328|         7596205.0|         8477957.0|          -881752.0| DOWN|\n|   CLQ|2018-08-10|    0.635|    0.665|     0.625|  0.63|      1726280|         1286304.0|         7596205.0|         -6309901.0| DOWN|\n|   CNU|2018-08-06|     3.94|     3.98|       3.9|  3.96|       182820|          312442.0|              null|               null| SAME|\n|   CNU|2018-08-07|     3.93|     3.93|      3.88|   3.9|       442064|          310671.0|          312442.0|            -1771.0| DOWN|\n|   CNU|2018-08-08|     3.88|    3.885|     3.845|  3.88|       307129|          348153.0|          310671.0|            37482.0|   UP|\n|   CNU|2018-08-09|     3.88|      3.9|      3.84|  3.88|       295266|          251076.0|          348153.0|           -97077.0| DOWN|\n|   CNU|2018-08-10|     3.87|     3.88|      3.82|  3.84|       150833|          223049.5|          251076.0|           -28026.5| DOWN|\n|   CSR|2018-08-06|     4.18|     4.23|      4.14|  4.21|      1477494|         1544192.5|              null|               null| SAME|\n|   CSR|2018-08-07|      4.2|     4.25|      4.19|  4.24|      1610891|         2203921.0|         1544192.5|           659728.5|   UP|\n|   CSR|2018-08-08|     4.28|    4.355|      4.22|  4.35|      3523378|2433934.6666666665|         2203921.0|  230013.6666666665|   UP|\n|   CSR|2018-08-09|     4.32|     4.36|      4.29|   4.3|      2167535|         2565461.0|2433934.6666666665|  131526.3333333335|   UP|\n|   CSR|2018-08-10|     4.29|     4.31|      4.23|  4.28|      2005470|         2086502.5|         2565461.0|          -478958.5| DOWN|\n|   IHD|2018-08-06|    13.45|    13.48|     13.45| 13.48|         5373|            4881.0|              null|               null| SAME|\n|   IHD|2018-08-07|    13.48|    13.48|     13.41| 13.41|         4389|           19787.0|            4881.0|            14906.0|   UP|\n|   IHD|2018-08-08|    13.44|    13.52|     13.44| 13.52|        49599|           24910.0|           19787.0|             5123.0|   UP|\n|   IHD|2018-08-09|    13.55|    13.66|     13.55| 13.65|        20742|29394.333333333332|           24910.0|  4484.333333333332|   UP|\n|   IHD|2018-08-10|    13.67|    13.67|     13.63| 13.63|        17842|           19292.0|29394.333333333332|-10102.333333333332| DOWN|\n+------+----------+---------+---------+----------+------+-------------+------------------+------------------+-------------------+-----+\nonly showing top 20 rows\n\n"
                    }
                ]
            },
            "apps": [],
            "jobName": "paragraph_1534666959493_1309696643",
            "id": "20180819-082239_596879792",
            "dateCreated": "2018-08-19T08:22:39+0000",
            "dateStarted": "2018-08-19T08:22:42+0000",
            "dateFinished": "2018-08-19T08:22:42+0000",
            "status": "FINISHED",
            "progressUpdateIntervalMs": 500,
            "$$hashKey": "object:1083"
        },
        {
            "text": " stocksLastTenDaysDown(trends,displayColumns)\n       ",
            "user": "keepinsight",
            "dateUpdated": "2018-08-19T08:23:16+0000",
            "config": {
                "colWidth": 12,
                "enabled": true,
                "results": {},
                "editorSetting": {
                    "language": "scala",
                    "editOnDblClick": false
                },
                "editorMode": "ace/mode/scala"
            },
            "settings": {
                "params": {},
                "forms": {}
            },
            "results": {
                "code": "SUCCESS",
                "msg": [
                    {
                        "type": "TEXT",
                        "data": "last tendays upward trend for symbols\n\n+------+----------+-------------+-----+\n|symbol|      date|adjcloseprice|trend|\n+------+----------+-------------+-----+\n|   ADO|2018-08-07|      7341231| DOWN|\n|   ACR|2018-08-07|      1281916| DOWN|\n|   ADJ|2018-08-07|       405433| DOWN|\n|   ABP|2018-08-07|      1047783| DOWN|\n|   ACF|2018-08-07|       409164| DOWN|\n|   ADH|2018-08-07|       144125| DOWN|\n|   AD8|2018-08-07|        12923| DOWN|\n|   ABA|2018-08-07|        18232| DOWN|\n|   AAJ|2018-08-07|      3661904| DOWN|\n|   ACQ|2018-08-07|       181910| DOWN|\n|   AAR|2018-08-07|       815702| DOWN|\n|   9SP|2018-08-07|       313754| DOWN|\n|   3DP|2018-08-07|       705425| DOWN|\n|   5GN|2018-08-07|        75090| DOWN|\n|   4DS|2018-08-07|      6955934| DOWN|\n|   AAA|2018-08-07|       175054| DOWN|\n|   3PL|2018-08-07|         8635| DOWN|\n|   88E|2018-08-07|     15195034| DOWN|\n|   ABR|2018-08-07|       550825| DOWN|\n|   AAC|2018-08-07|       401068| DOWN|\n+------+----------+-------------+-----+\nonly showing top 20 rows\n\n"
                    }
                ]
            },
            "apps": [],
            "jobName": "paragraph_1534666836886_-626560681",
            "id": "20180819-082036_1773913933",
            "dateCreated": "2018-08-19T08:20:36+0000",
            "dateStarted": "2018-08-19T08:23:17+0000",
            "dateFinished": "2018-08-19T08:23:20+0000",
            "status": "FINISHED",
            "progressUpdateIntervalMs": 500,
            "$$hashKey": "object:1084"
        },
        {
            "text": " stocksLastTenDaysSame(trends,displayColumns)\n       \n  ",
            "user": "keepinsight",
            "dateUpdated": "2018-08-19T08:23:33+0000",
            "config": {
                "colWidth": 12,
                "enabled": true,
                "results": {},
                "editorSetting": {
                    "language": "scala",
                    "editOnDblClick": false
                },
                "editorMode": "ace/mode/scala"
            },
            "settings": {
                "params": {},
                "forms": {}
            },
            "results": {
                "code": "SUCCESS",
                "msg": [
                    {
                        "type": "TEXT",
                        "data": "last tendays upward trend for symbols\n\n+------+----------+-------------+-----+\n|symbol|      date|adjcloseprice|trend|\n+------+----------+-------------+-----+\n|   ACR|2018-08-06|       577349| SAME|\n|   ACQ|2018-08-06|       153840| SAME|\n|   9SP|2018-08-06|        64719| SAME|\n|   4CE|2018-08-06|       913847| SAME|\n|   AC8|2018-08-06|       151285| SAME|\n|   A3D|2018-08-06|         7957| SAME|\n|   AAA|2018-08-06|        56354| SAME|\n|   1AL|2018-08-06|         5000| SAME|\n|   3PL|2018-08-06|        73202| SAME|\n|   ACB|2018-08-06|        20000| SAME|\n|   1AD|2018-08-06|        13562| SAME|\n|   4DS|2018-08-06|     12067113| SAME|\n|   3DP|2018-08-06|       605042| SAME|\n|   5GN|2018-08-06|       167958| SAME|\n|   A2M|2018-08-06|      3511853| SAME|\n|   A1C|2018-08-06|       150000| SAME|\n|   88E|2018-08-06|      3176191| SAME|\n|   AAC|2018-08-06|       310969| SAME|\n|   AAD|2018-08-06|       647955| SAME|\n|   AAJ|2018-08-06|        91042| SAME|\n+------+----------+-------------+-----+\nonly showing top 20 rows\n\n"
                    }
                ]
            },
            "apps": [],
            "jobName": "paragraph_1534666996997_-1279632806",
            "id": "20180819-082316_250965811",
            "dateCreated": "2018-08-19T08:23:16+0000",
            "dateStarted": "2018-08-19T08:23:33+0000",
            "dateFinished": "2018-08-19T08:23:36+0000",
            "status": "FINISHED",
            "progressUpdateIntervalMs": 500,
            "$$hashKey": "object:1085"
        },
        {
            "text": " stocksLastTenDaysUP(trends,displayColumns)\n",
            "user": "keepinsight",
            "dateUpdated": "2018-08-19T08:23:40+0000",
            "config": {
                "colWidth": 12,
                "enabled": true,
                "results": {},
                "editorSetting": {
                    "language": "scala",
                    "editOnDblClick": false
                },
                "editorMode": "ace/mode/scala"
            },
            "settings": {
                "params": {},
                "forms": {}
            },
            "results": {
                "code": "SUCCESS",
                "msg": [
                    {
                        "type": "TEXT",
                        "data": "last tendays upward trend for symbols\n\n+------+----------+-------------+-----+\n|symbol|      date|adjcloseprice|trend|\n+------+----------+-------------+-----+\n|   AIS|2018-08-07|        56983|   UP|\n|   AGI|2018-08-07|       164506|   UP|\n|   A2M|2018-08-07|      3121993|   UP|\n|   AEB|2018-08-07|       367141|   UP|\n|   AGL|2018-08-07|      1342515|   UP|\n|   AGR|2018-08-07|        13361|   UP|\n|   1AD|2018-08-07|         3070|   UP|\n|   ADX|2018-08-07|       327448|   UP|\n|   ADT|2018-08-07|       469354|   UP|\n|   AEG|2018-08-07|        91839|   UP|\n|   AC8|2018-08-07|       150247|   UP|\n|   ABC|2018-08-07|       741602|   UP|\n|   ABX|2018-08-07|       176467|   UP|\n|   4CE|2018-08-07|      1149963|   UP|\n|   ADN|2018-08-07|      3441228|   UP|\n|   AAD|2018-08-07|       895651|   UP|\n|   ABT|2018-08-07|        42307|   UP|\n|   AFI|2018-08-07|       535064|   UP|\n|   AFR|2018-08-07|       248252|   UP|\n|   A3D|2018-08-07|         2381|   UP|\n+------+----------+-------------+-----+\nonly showing top 20 rows\n\n"
                    }
                ]
            },
            "apps": [],
            "jobName": "paragraph_1534667013208_-77110248",
            "id": "20180819-082333_585400162",
            "dateCreated": "2018-08-19T08:23:33+0000",
            "dateStarted": "2018-08-19T08:23:40+0000",
            "dateFinished": "2018-08-19T08:23:43+0000",
            "status": "FINISHED",
            "progressUpdateIntervalMs": 500,
            "$$hashKey": "object:1086"
        },
        {
            "text": "stocksReport(trends)",
            "user": "keepinsight",
            "dateUpdated": "2018-08-19T08:25:32+0000",
            "config": {
                "colWidth": 12,
                "enabled": true,
                "results": {},
                "editorSetting": {
                    "language": "scala",
                    "editOnDblClick": false
                },
                "editorMode": "ace/mode/scala"
            },
            "settings": {
                "params": {},
                "forms": {}
            },
            "results": {
                "code": "ERROR",
                "msg": [
                    {
                        "type": "TEXT",
                        "data": "<console>:86: error: not enough arguments for method stocksReport: (stocksDF: org.apache.spark.sql.DataFrame, columns: List[String])org.apache.spark.sql.DataFrame.\nUnspecified value parameter columns.\n       stocksReport(trends)\n                   ^\n"
                    }
                ]
            },
            "apps": [],
            "jobName": "paragraph_1534667020929_1333394544",
            "id": "20180819-082340_1055324619",
            "dateCreated": "2018-08-19T08:23:40+0000",
            "dateStarted": "2018-08-19T08:25:32+0000",
            "dateFinished": "2018-08-19T08:25:32+0000",
            "status": "ERROR",
            "progressUpdateIntervalMs": 500,
            "$$hashKey": "object:1087"
        },
        {
            "user": "keepinsight",
            "config": {
                "colWidth": 12,
                "enabled": true,
                "results": {},
                "editorSetting": {
                    "language": "scala",
                    "editOnDblClick": false
                },
                "editorMode": "ace/mode/scala"
            },
            "settings": {
                "params": {},
                "forms": {}
            },
            "apps": [],
            "jobName": "paragraph_1534667132178_515988666",
            "id": "20180819-082532_1498613655",
            "dateCreated": "2018-08-19T08:25:32+0000",
            "status": "READY",
            "progressUpdateIntervalMs": 500,
            "$$hashKey": "object:1088"
        }
    ],
    "name": "test_trends2",
    "id": "2DNZ2BTC1",
    "angularObjects": {
        "2DMMQMG6B:shared_process": [],
        "2DMZBAQZD:shared_process": [],
        "2DKW8MC7H:shared_process": [],
        "2DMJUUA2E:shared_process": [],
        "2DPK7CQBG:shared_process": [],
        "2DMG4E7VD:shared_process": [],
        "2DPCH6X5N:shared_process": [],
        "2DMT7GCUD:shared_process": [],
        "2DNYG152U:shared_process": []
    },
    "config": {
        "looknfeel": "default",
        "personalizedMode": "false"
    },
    "info": {}
}